package gokeenapiui

import (
	"fmt"
	"net/url"
	"time"

	"fyne.io/fyne/v2"
	"fyne.io/fyne/v2/container"
	"fyne.io/fyne/v2/dialog"
	"fyne.io/fyne/v2/theme"
	"fyne.io/fyne/v2/widget"
	"github.com/noksa/gokeenapi/pkg/config"
	"github.com/noksa/gokeenapi/pkg/gokeenrestapi"
	"github.com/spf13/viper"
	"go.uber.org/multierr"
)

var (
	Containers = containers{}
)

const (
	AwgFileConf = "AWG –∫–æ–Ω—Ñ. —Ñ–∞–π–ª"
)

type containers struct {
}

func (*containers) CreateAwgContainer() *fyne.Container {
	creater := func(form *widget.Form) *fyne.Container {
		form.SubmitText = "–°–æ–∑–¥–∞—Ç—å"
		form.CancelText = "–í—ã—Ö–æ–¥"
		form.OnCancel = func() {
			fyne.CurrentApp().Quit()
		}
		form.OnSubmit = func() {
			Common.SetData()
			dataErr := Common.RouterDataFilled()
			if dataErr != nil {
				msg := ""
				for _, err := range multierr.Errors(dataErr) {
					msg = fmt.Sprintf("%v\n", err.Error())
				}
				dialog.ShowInformation("–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–∞–Ω–Ω—ã—Ö", msg, mainWindow)
				return
			}
			v, _ := Bindings.AwgConfFile.Get()
			connectionName, _ := Bindings.AwgName.Get()
			err := gokeenrestapi.Auth()
			if err != nil {
				dialog.ShowInformation("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏", err.Error(), mainWindow)
				return
			}
			err = gokeenrestapi.Checks.CheckAWGInterfaceExistsFromConfFile(v)
			if err != nil {
				dialog.ShowInformation("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è conf —Ñ–∞–π–ª–∞", err.Error(), mainWindow)
				return
			}
			mainWindow.SetContent(ProgressBar("–°–æ–∑–¥–∞—ë–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ..."))
			go func() {
				createdInterface, err := gokeenrestapi.AwgConf.AddInterface(v, connectionName)
				if err != nil {
					dialog.ShowInformation("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è", err.Error(), mainWindow)
					errorProcess(err)
					return
				}
				fyne.Do(func() {
					mainWindow.SetContent(ProgressBar("–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ..."))
				})
				time.Sleep(time.Second * 1)
				err = gokeenrestapi.AwgConf.ConfigureOrUpdateInterface(v, createdInterface.Created)
				if err != nil {
					dialog.ShowInformation("–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è", err.Error(), mainWindow)
					errorProcess(err)
					return
				}
				err = gokeenrestapi.Interface.SetGlobalIpInInterface(createdInterface.Created, true)
				if err != nil {
					dialog.ShowInformation("–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ IP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è", err.Error(), mainWindow)
					errorProcess(err)
					return
				}
				err = gokeenrestapi.Interface.UpInterface(createdInterface.Created)
				if err != nil {
					dialog.ShowInformation("–û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è", err.Error(), mainWindow)
					errorProcess(err)
					return
				}
				fyne.Do(func() {
					mainWindow.SetContent(ProgressBar("–ñ–¥—ë–º –ø–æ–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç..."))
				})
				err = gokeenrestapi.Interface.WaitUntilInterfaceIsUp(createdInterface.Created)
				if err != nil {
					dialog.ShowInformation("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ", err.Error(), mainWindow)
					errorProcess(err)
					return
				}
				quitButton := widget.NewButton("–í—ã—Ö–æ–¥", func() {
					fyne.CurrentApp().Quit()
				})
				fyne.Do(func() {
					p, _ := url.Parse(fmt.Sprintf("%v/otherConnections", viper.Get(config.ViperKeeneticUrl)))
					mainWindow.SetContent(container.NewVBox(
						widget.NewLabel(fmt.Sprintf("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ –∏ –≤–∫–ª—é—á–µ–Ω–æ!\nID —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: %v\n–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø–æ–ª–∏—Ç–∏–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–ª–∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –∏ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è VPN!\n–£–¥–∞—á–∏! üåê", createdInterface.Created)),
						widget.NewHyperlink("–û—Ç–∫—Ä—ã—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–æ—É—Ç–µ—Ä–∞", p),
						container.NewBorder(nil, nil, quitButton, nil, quitButton)))
				})
			}()
		}
		c := container.NewVBox(widget.NewLabel(`==> üõú
–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–æ–≤–æ–≥–æ AWG —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –≤ keenetic —Ä–æ—É—Ç–µ—Ä–µ –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –Ω–∏–∂–µ
–ï—Å–ª–∏ –í–∞—à keenetic —Ä–æ—É—Ç–µ—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ (–í—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ –µ–≥–æ Wi-Fi —Å–µ—Ç–∏),
—Ç–æ –∫ –Ω–µ–º—É –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –ø–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É IP –∞–¥—Ä–µ—Å—É –∏ HTTP –ø—Ä–æ—Ç–æ–∫–æ–ª—É.
–ï—Å–ª–∏ —Ä–æ—É—Ç–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, –∫ –Ω–µ–º—É –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ KeenDNS –∏–º—è –∏ HTTPS –ø—Ä–æ—Ç–æ–∫–æ–ª
–ü—Ä–∏–º–µ—Ä—ã:
–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å: http://192.168.1.1
–í–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å: https://super-keenetic.keenetic.pro`),
			form)
		return c
	}
	f := Forms.RouterUrlLoginPassword()
	var d *dialog.FileDialog
	repickFileButton := widget.NewButtonWithIcon("–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª", theme.UploadIcon(), func() {
		d.Show()
	})
	d = dialog.NewFileOpen(func(reader fyne.URIReadCloser, err error) {
		if err != nil {
			return
		}
		if reader == nil {
			return
		}
		defer func() {
			_ = reader.Close()
		}()
		p := reader.URI().Path()
		if p != "" {
			_ = Bindings.AwgConfFile.Set(p)
			f = Forms.RouterUrlLoginPassword()
			addAwgNameField(f)
			f.AppendItem(&widget.FormItem{
				Text:     AwgFileConf,
				Widget:   widget.NewLabel(p),
				HintText: "–§–∞–π–ª –≤—ã–±—Ä–∞–Ω",
			})
			f.Append("", repickFileButton)
			mainWindow.SetContent(creater(f))
		}

	}, mainWindow)
	d.SetTitleText("–í—ã–±–æ—Ä AWG –∫–æ–Ω—Ñ–∏–≥ —Ñ–∞–π–ª–∞")
	d.SetDismissText("–û—Ç–º–µ–Ω–∞")
	d.SetConfirmText("–í—ã–±—Ä–∞—Ç—å")
	d.Resize(fyne.NewSize(800, 600))
	addAwgNameField(f)
	f.AppendItem(&widget.FormItem{
		Text: AwgFileConf,
		Widget: widget.NewButtonWithIcon("–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª", theme.FolderOpenIcon(), func() {
			d.Show()
		}),
		HintText: "",
	})
	return creater(f)
}

func addAwgNameField(f *widget.Form) {
	f.AppendItem(&widget.FormItem{
		Text:     "–ò–º—è —Å–æ–µ–¥.",
		Widget:   widget.NewEntryWithData(Bindings.AwgName),
		HintText: "–ò–º—è —Å–æ–∑–¥–∞–≤–∞–µ–º–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–≤–Ω–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞",
	})
}

func errorProcess(err error) {
	if err == nil {
		return
	}
	fyne.Do(func() {
		mainWindow.SetContent(container.NewVBox(widget.NewLabel(fmt.Sprintf("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ :(\n\n–û—à–∏–±–∫–∞: %v", err.Error()))))
	})
}
